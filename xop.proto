syntax = "proto3";

option go_package = "github.com/xoplog/xop-go/xopproto";

message Trace {
	bytes TraceID = 1;
	repeated Request requests = 2;
}

message Request {
	bytes requestID = 1;
	optional bytes parentTraceID = 2;
	bytes parentSpanID = 3;
	int32 priorLinesInRequest = 4;
	repeated Span spans = 5; 
	repeated Line lines = 6; // not included in spans because we want to preserve the exact ordering
	int32 errorCount = 7;
	int32 alertCount = 8;
	sfixed64 startTime = 9; // duplicates in in the request span
	sfixed64 endTime = 10; // duplicates in in the request span XXX ADD!
}

message Line {
	bytes spanID = 1;
	int32 logLevel = 2;
	sfixed64 timestamp = 3;
	repeated Attribute attributes = 4;
	optional string messageFormat = 5;
	message string = 6;
	LineType lineType = 7;
	optional AttributeCommon lineAttribute = 8;
}

message Span {
	bytes spanID = 3;
	bytes parentID = 4;
	repeated SpanAttribute attributes = 5;
	sfixed64 startTime = 6;
	optional sfixed64 endTime = 7;
	optional bytes baggage = 8; // only populated if isRequest is true and there is data
	optional bytes traceState = 9; // only populated if isRequest is true and there is data
	int32 version = 10;
	bool isRequest = 11;
}

message SpanAttribute {
	AttributeDefinitionSequenceNumber int = 1;
	AttributeCommon attributeCommon = 2;
}

message Attribute {
	string key = 1;
	AttributeCommon attributeCommon = 2;
}

message AttributeCommon {
	AttributeType type = 1;
	optional string stringValue = 2;
	optional sint64 intValue = 3; 
	optional uint64 uintValue = 4;
	optional double floatValue = 5;
	optional bytes bytesValue = 6;
}

message AttributeDefinition {
	string key = 1;
	string description = 2;
	string namespace = 3;
	string namespaceSemver = 4;
	AttributeType type = 5;
	bool shouldIndex = 6;
	int32 prominence = 7;
	bool locked = 8;
	bool distinct = 9;
	bool multiple = 10;
}

enum LineType {
	Line = 0;
	Model = 1;
	Link = 2;
}

// comes from ZZZAttribute
enum AttributeType {
	Unknown = 0;
	Bool = 1; // value is in intValue, 0 = false, 1 = true
	Float64 = 2;
	Float32 = 3;
	Int64 = 4;
	Int32 = 5;
	Int16 = 6;
	Int8 = 7;
	Int = 8;
	String = 9;
	Link = 10; // value is in stringValue
	Any = 11; // value is in bytesValue, JSON encoded, type is in stringValue
	Time = 12; // value is in intValue, UnixNano.
	Duration = 13; // value is in intValue, nanoseconds
	Enum = 14; // int is in intValue, string is in stringValue
	// These are not included in ZZZAttribute, but are included in line attributes (AllData)
	Uint64 = 100;
	Uint32 = 101;
	Uint16 = 102;
	Uint8 = 103;
	Uint = 104;
	Stringer = 105; // value is in stringValue
}

message EnumDefinition {
	string attributeKey = 1;
	string namespace = 2;
	string namespaceSemver = 3;
	string string = 4;
	int64 intValue = 5;
}
